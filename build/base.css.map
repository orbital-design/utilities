{"version":3,"sources":["_scss-vars.scss","base.css","_css-vars.scss","_functions.scss","_class-constructor.scss"],"names":[],"mappings":"AAoBA;;;ECjBE;AD4BF;;;ECxBE;ADmCF;;;;EC9BE;AD2CF;;;;ECtCE;ADuDF;;;;EClDE;ACtBF;EAEI,sBAAkB;EAClB,uBAAkB;EAClB,oBAAiB;EACjB,oBAAiB;EACjB,wBAAkB;EAClB,sBAAkB;EAElB,qBAAe;EACf,kJAAW,EAAA;;ACIX;EDAA;IACI,kDAAe,EAAA,EAClB;;AAGL;EAEI,2EAAqB;EACrB,2EAAqB;EACrB,wEAAqB;EACrB,wEAAqB;EACrB,6EAAoB;EACpB,6EAAoB;EACpB,2CAAoB;EACpB,2CAAoB;EACpB,gDAAmB;EACnB,gDAAmB;EACnB,sEAAoB;EACpB,sEAAoB;EACpB,2EAAmB;EACnB,2EAAmB;EACnB,sEAAoB;EACpB,sEAAoB;EACpB,2EAAmB;EACnB,2EAAmB;EACnB,sEAAoB;EACpB,sEAAoB;EACpB,2EAAmB;EACnB,2EAAmB;EACnB,sEAAoB;EACpB,sEAAoB;EACpB,2EAAmB;EACnB,2EAAmB;EACnB,sEAAoB;EACpB,sEAAoB;EACpB,2EAAmB;EACnB,2EAAmB;ECfP,mEAAwB;EAAxB,6DAAwB;EDwBpC,4HAAQ;EACR,2HAAU;EACV,yHAAQ;EACR,yHAAQ;EACR,yHAAQ;EACR,0HAAS;EACT,0HAAS;EC9BG,eAAwB;EAAxB,gBAAwB;EAAxB,cAAwB;EAAxB,2BAAwB;EAAxB,2BAAwB;EAAxB,0BAAwB;EAAxB,oBAAwB;EAAxB,wBAAwB;EAAxB,wBAAwB;EAAxB,iBAAwB;EAAxB,qBAAwB;EAAxB,qBAAwB;EAAxB,qBAAwB;EAAxB,wBAAwB;EAAxB,kBAAwB;EAAxB,gBAAwB;EAAxB,gBAAwB;EAAxB,oBAAwB;EAAxB,mBAAwB;EAAxB,qBAAwB;EAAxB,kBAAwB,EAAA;;AChBpB;EACI,qEDdQ;ECcR,2BDdQ,EAAA;;ACaZ;EACI,8DDdQ;ECcR,4BDdQ,EAAA;;ACkEpB;EArDQ;IACI,qEDdQ;ICcR,2BDdQ,EAAA;ECaZ;IACI,8DDdQ;ICcR,4BDdQ,EAAA,ECeX;;AAmDT;EArDQ;IACI,qEDdQ;ICcR,2BDdQ,EAAA;ECaZ;IACI,8DDdQ;ICcR,4BDdQ,EAAA,ECeX;;AAmDT;EArDQ;IACI,qEDdQ;ICcR,2BDdQ,EAAA;ECaZ;IACI,8DDdQ;ICcR,4BDdQ,EAAA,ECeX;;AAmDT;EArDQ;IACI,qEDdQ;ICcR,2BDdQ,EAAA;ECaZ;IACI,8DDdQ;ICcR,4BDdQ,EAAA,ECeX","file":"base.css","sourcesContent":["// Global Settings\n$font_styles: null !default;\n$font_weights: null !default;\n$letter_spacings: null !default;\n$line_heights: null !default;\n$text_alignments: null !default;\n$text_decorations: null !default;\n\n// Breakpoints - min-width\n// # DO NOT REMOVE - Edit but DO NOT REMOVE\n$breakpoints: (\n  sm: 768px,\n  md: 1024px,\n  lg: 1300px,\n  xl: 1500px\n);\n\n// Comment out any maps below this line to prevent css vars or Utility Classes being created from them.\n//===============================================================================================\n\n/**\n * Typography - Font Fmily\n * # Generates matching Utility Classes in: typography/_font-family.scss\n */\n$font_families: (\n    // name: ( value, output css var, css var name )\n    sans: ( 'Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif', true, 'ff-sans'),\n    serif: ( 'Georgia, Cambria, \"Times New Roman\", Times, serif', true, 'ff-serif' )\n);\n\n\n/**\n * Typography - Font Style\n * # Generates matching Utility Classes in: typography/_font-style.scss\n */\n$font_styles: (\n    // name: ( value, output css var, css var name )\n    default: (normal, false, ''),\n    italic: ( italic, false, '' ),\n    normal: ( normal, false, '' )\n);\n\n/**\n * Typography - Font Weights\n * # Generates matching Utility Classes in:: typography/_font-weight.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n$font_weights: (\n    // name: ( value, output css var, css var name )\n    default: (400, false, ''),\n    light: ( 200, true, 'fw-light' ),\n    normal: ( 400, true, 'fw-normal' ),\n    bold: ( 600, true, 'fw-bold' )\n);\n\n/**\n * Typography - Letter Spacings / Tracking\n * # Generates matching Utility Classes in:: typography/_letter-spacing.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n$letter_spacings: (\n    // name: ( value, output css var, css var name )\n    default: (1.5, false, ''),\n    tightest: ( -0.1em, true, 'tracking-tightest' ),\n    tighter: ( -0.05em, true, 'tracking-tighter' ),\n    tight: ( -0.025em, true, 'tracking-tight' ),\n    normal: ( 0, true, 'tracking-normal' ),\n    wide: ( 0.025em, true, 'tracking-wide' ),\n    wider: ( 0.05em, true, 'tracking-wider' ),\n    widest: ( 0.1em true, 'tracking-widest' )\n);\n\n/**\n * Typography - Leading / Line Height\n * # Generates matching Utility Classes in:: typography/_line-height.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n$line_heights: (\n    // name: ( value, output css var, css var name )\n    default: (1.5, false, ''),\n    none:   ( 1, true, 'leading-none' ),\n    tight:  ( 1.25, true, 'leading-tight' ),\n    snug:   ( 1.375, true, 'leading-snug' ),\n    normal: ( 1.5, true, 'leading-normal' ),\n    relaxed:( 1.625, true, 'leading-relaxed' ),\n    loose:  ( 2, true, 'leading-loose' )\n);\n\n// # Text Align\n// ## Generates matching Utility Classes in:: typography/_text-align.scss\n$text_alignments: (\n    // name: ( value, output css var, css var name )\n    default: ( 1.5, false, '' ),\n    left: ( left, false, '' ),\n    center: ( center, false, '' ),\n    right: ( right, false, '' ),\n    justify: ( justify false, '' )\n);\n\n// # Text Decoration\n// ## Generates matching Utility Classes in:: typography/_text-decoration.scss\n$text_decorations: (\n    // name: ( value, output css var, css var name )\n    under: ( underline, false, '' ),\n    strike: ( line-through, false, '' ),\n    none: ( none, false, '' )\n);\n\n// Colours\n// # Generates matching CSS Custom Vars in: _css-vars.\n$colours: (\n    // name: ( value, output css var, css var name )\n    white: ( #ffffff, true, 'white' ),\n    black: ( #252525, true, 'black' ),\n    dark-grey: ( #212322, true, 'dark-grey' ),\n    mid-grey: ( #54585a, true, 'mid-grey' ),\n    light-grey: ( #97999b, true, 'light-grey' ),\n    bg-grey: ( #f3f3f3, true, 'bg-grey' )\n);","/**\n * Typography - Font Fmily\n * # Generates matching Utility Classes in: typography/_font-family.scss\n */\n/**\n * Typography - Font Style\n * # Generates matching Utility Classes in: typography/_font-style.scss\n */\n/**\n * Typography - Font Weights\n * # Generates matching Utility Classes in:: typography/_font-weight.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n/**\n * Typography - Letter Spacings / Tracking\n * # Generates matching Utility Classes in:: typography/_letter-spacing.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n/**\n * Typography - Leading / Line Height\n * # Generates matching Utility Classes in:: typography/_line-height.scss\n * # Generates matching CSS Custom Vars in: _css-vars.\n */\n:root {\n  --fluid-min-width: 320;\n  --fluid-max-width: 1500;\n  --fluid-min-size: 16;\n  --fluid-max-size: 19;\n  --fluid-min-ratio: 1.125;\n  --fluid-max-ratio: 1.2;\n  --fluid-screen: 100vw;\n  --fluid-bp: calc((var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) / ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16))); }\n\n@media (min-width: 1500px) {\n  :root {\n    --fluid-screen: calc(var(--fluid-max-width) * 1px); } }\n\n:root {\n  --fluid-max-negative: (1 / var(--fluid-max-ratio) / var(--fluid-max-ratio));\n  --fluid-min-negative: (1 / var(--fluid-min-ratio) / var(--fluid-min-ratio));\n  --fluid-min-scale--1: var(--fluid-min-ratio) * var(--fluid-min-negative);\n  --fluid-max-scale--1: var(--fluid-max-ratio) * var(--fluid-max-negative);\n  --fluid-min-size--1: (var(--fluid-min-size) * var(--fluid-min-scale--1)) / 16;\n  --fluid-max-size--1: (var(--fluid-max-size) * var(--fluid-max-scale--1)) / 16;\n  --fluid-min-scale-0: var(--fluid-min-ratio);\n  --fluid-max-scale-0: var(--fluid-max-ratio);\n  --fluid-min-size-0: (var(--fluid-min-size)) / 16;\n  --fluid-max-size-0: (var(--fluid-max-size)) / 16;\n  --fluid-min-scale-1: var(--fluid-min-scale-0) * var(--fluid-min-ratio);\n  --fluid-max-scale-1: var(--fluid-max-scale-0) * var(--fluid-max-ratio);\n  --fluid-min-size-1: (var(--fluid-min-size) * var(--fluid-min-scale-0)) / 16;\n  --fluid-max-size-1: (var(--fluid-max-size) * var(--fluid-max-scale-0)) / 16;\n  --fluid-min-scale-2: var(--fluid-min-scale-1) * var(--fluid-min-ratio);\n  --fluid-max-scale-2: var(--fluid-max-scale-1) * var(--fluid-max-ratio);\n  --fluid-min-size-2: (var(--fluid-min-size) * var(--fluid-min-scale-1)) / 16;\n  --fluid-max-size-2: (var(--fluid-max-size) * var(--fluid-max-scale-1)) / 16;\n  --fluid-min-scale-3: var(--fluid-min-scale-2) * var(--fluid-min-ratio);\n  --fluid-max-scale-3: var(--fluid-max-scale-2) * var(--fluid-max-ratio);\n  --fluid-min-size-3: (var(--fluid-min-size) * var(--fluid-min-scale-2)) / 16;\n  --fluid-max-size-3: (var(--fluid-max-size) * var(--fluid-max-scale-2)) / 16;\n  --fluid-min-scale-4: var(--fluid-min-scale-3) * var(--fluid-min-ratio);\n  --fluid-max-scale-4: var(--fluid-max-scale-3) * var(--fluid-max-ratio);\n  --fluid-min-size-4: (var(--fluid-min-size) * var(--fluid-min-scale-3)) / 16;\n  --fluid-max-size-4: (var(--fluid-max-size) * var(--fluid-max-scale-3)) / 16;\n  --fluid-min-scale-5: var(--fluid-min-scale-4) * var(--fluid-min-ratio);\n  --fluid-max-scale-5: var(--fluid-max-scale-4) * var(--fluid-max-ratio);\n  --fluid-min-size-5: (var(--fluid-min-size) * var(--fluid-min-scale-4)) / 16;\n  --fluid-max-size-5: (var(--fluid-max-size) * var(--fluid-max-scale-4)) / 16;\n  --ff-sans: Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n  --ff-serif: Georgia, Cambria, \"Times New Roman\", Times, serif;\n  --fs-sm: calc(((var(--fluid-min-size--1) * 1rem) + (var(--fluid-max-size--1) - var(--fluid-min-size--1)) * var(--fluid-bp)));\n  --fs-base: calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp)));\n  --fs-md: calc(((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp)));\n  --fs-lg: calc(((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp)));\n  --fs-xl: calc(((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp)));\n  --fs-2xl: calc(((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp)));\n  --fs-3xl: calc(((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp)));\n  --fw-light: 200;\n  --fw-normal: 400;\n  --fw-bold: 600;\n  --tracking-tightest: -0.1em;\n  --tracking-tighter: -0.05em;\n  --tracking-tight: -0.025em;\n  --tracking-normal: 0;\n  --tracking-wide: 0.025em;\n  --tracking-wider: 0.05em;\n  --leading-none: 1;\n  --leading-tight: 1.25;\n  --leading-snug: 1.375;\n  --leading-normal: 1.5;\n  --leading-relaxed: 1.625;\n  --leading-loose: 2;\n  --white: #ffffff;\n  --black: #252525;\n  --dark-grey: #212322;\n  --mid-grey: #54585a;\n  --light-grey: #97999b;\n  --bg-grey: #f3f3f3; }\n\n.font--sans {\n  font-family: var(--ff-sans); }\n\n.font--serif {\n  font-family: var(--ff-serif); }\n\n@media (min-width: 768px) {\n  .sm\\:font--sans {\n    font-family: var(--ff-sans); }\n  .sm\\:font--serif {\n    font-family: var(--ff-serif); } }\n\n@media (min-width: 1024px) {\n  .md\\:font--sans {\n    font-family: var(--ff-sans); }\n  .md\\:font--serif {\n    font-family: var(--ff-serif); } }\n\n@media (min-width: 1300px) {\n  .lg\\:font--sans {\n    font-family: var(--ff-sans); }\n  .lg\\:font--serif {\n    font-family: var(--ff-serif); } }\n\n@media (min-width: 1500px) {\n  .xl\\:font--sans {\n    font-family: var(--ff-sans); }\n  .xl\\:font--serif {\n    font-family: var(--ff-serif); } }\n",":root {\n    // Fluid Text Defaults\n    --fluid-min-width: 320;\n    --fluid-max-width: 1500;\n    --fluid-min-size: 16;\n    --fluid-max-size: 19;\n    --fluid-min-ratio: 1.125;\n    --fluid-max-ratio: 1.2;\n\n    --fluid-screen: 100vw;\n    --fluid-bp: calc((var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) / ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16)));\n}\n\n@include mq(xl) {\n    :root {\n        --fluid-screen: calc(var(--fluid-max-width) * 1px);\n    }\n}\n\n:root {\n    // Fluid Text Helpers\n    --fluid-max-negative: (1 / var(--fluid-max-ratio) / var(--fluid-max-ratio));\n    --fluid-min-negative: (1 / var(--fluid-min-ratio) / var(--fluid-min-ratio));\n    --fluid-min-scale--1: var(--fluid-min-ratio) * var(--fluid-min-negative);\n    --fluid-max-scale--1: var(--fluid-max-ratio) * var(--fluid-max-negative);\n    --fluid-min-size--1: (var(--fluid-min-size) * var(--fluid-min-scale--1)) / 16;\n    --fluid-max-size--1: (var(--fluid-max-size) * var(--fluid-max-scale--1)) / 16;\n    --fluid-min-scale-0: var(--fluid-min-ratio);\n    --fluid-max-scale-0: var(--fluid-max-ratio);\n    --fluid-min-size-0: (var(--fluid-min-size)) / 16;\n    --fluid-max-size-0: (var(--fluid-max-size)) / 16;\n    --fluid-min-scale-1: var(--fluid-min-scale-0) * var(--fluid-min-ratio);\n    --fluid-max-scale-1: var(--fluid-max-scale-0) * var(--fluid-max-ratio);\n    --fluid-min-size-1: (var(--fluid-min-size) * var(--fluid-min-scale-0)) / 16;\n    --fluid-max-size-1: (var(--fluid-max-size) * var(--fluid-max-scale-0)) / 16;\n    --fluid-min-scale-2: var(--fluid-min-scale-1) * var(--fluid-min-ratio);\n    --fluid-max-scale-2: var(--fluid-max-scale-1) * var(--fluid-max-ratio);\n    --fluid-min-size-2: (var(--fluid-min-size) * var(--fluid-min-scale-1)) / 16;\n    --fluid-max-size-2: (var(--fluid-max-size) * var(--fluid-max-scale-1)) / 16;\n    --fluid-min-scale-3: var(--fluid-min-scale-2) * var(--fluid-min-ratio);\n    --fluid-max-scale-3: var(--fluid-max-scale-2) * var(--fluid-max-ratio);\n    --fluid-min-size-3: (var(--fluid-min-size) * var(--fluid-min-scale-2)) / 16;\n    --fluid-max-size-3: (var(--fluid-max-size) * var(--fluid-max-scale-2)) / 16;\n    --fluid-min-scale-4: var(--fluid-min-scale-3) * var(--fluid-min-ratio);\n    --fluid-max-scale-4: var(--fluid-max-scale-3) * var(--fluid-max-ratio);\n    --fluid-min-size-4: (var(--fluid-min-size) * var(--fluid-min-scale-3)) / 16;\n    --fluid-max-size-4: (var(--fluid-max-size) * var(--fluid-max-scale-3)) / 16;\n    --fluid-min-scale-5: var(--fluid-min-scale-4) * var(--fluid-min-ratio);\n    --fluid-max-scale-5: var(--fluid-max-scale-4) * var(--fluid-max-ratio);\n    --fluid-min-size-5: (var(--fluid-min-size) * var(--fluid-min-scale-4)) / 16;\n    --fluid-max-size-5: (var(--fluid-max-size) * var(--fluid-max-scale-4)) / 16;\n\n    // Typography Properties\n    // # Font Families\n    // ## Create matchng utilities for these in: typography/_font-family.scss\n    @include css-var-constructor( $font_families );\n\n    // # Font Sizes\n    // ## Create matchng utilities for these in: typography/_font-style.scss\n    --fs-sm: calc(((var(--fluid-min-size--1) * 1rem) + (var(--fluid-max-size--1) - var(--fluid-min-size--1)) * var(--fluid-bp)));\n    --fs-base: calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp)));\n    --fs-md: calc(((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp)));\n    --fs-lg: calc(((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp)));\n    --fs-xl: calc(((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp)));\n    --fs-2xl: calc(((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp)));\n    --fs-3xl: calc(((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp)));\n\n    // # Font Weights\n    // ## Create matchng utilities for these in: typography/_font-weight.scss\n    @include css-var-constructor( $font_weights );\n\n    // # Tracking / Letter Spacing\n    // ## Create matchng utilities for these in: typography/_letter-spacing.scss\n    @include css-var-constructor( $letter_spacings );\n\n    // # Leading / Line Height Properties\n    // ## Create matchng utilities for these in: typography/_line-height.scss\n    @include css-var-constructor( $line_heights );\n\n    // Generate Color Properties\n    // # Create matchng utilities for these in: typography/_text-colour.scss\n    @include css-var-constructor( $colours );\n}\n","// fn for easily creating css vars\n// # https://dev.to/meduzen/write-css-variables-faster-in-scss-1mon\n@function v($var, $fallback: null) {\n    @if($fallback) {\n        @return var(--#{$var}, #{$fallback});\n    } @else {\n        @return var(--#{$var});\n    }\n}\n\n// fn for creating media Queries\n// # https://www.sitepoint.com/using-sass-maps/\n@mixin mq($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {\n      @content;\n    }\n  }\n\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Please make sure it is defined in `$breakpoints` map.\";\n  }\n}\n\n// CSS Custom Var/Prop Constructor\n// # Used in: _css-vars.scss\n@mixin css-var-constructor( $map ) {\n    // ## Check if $map has been specified\n    @if $map != null {\n        // ### If is specified, loop through each item in the map.\n        @each $name, $details in $map {\n            // #### Check whether item should output a var.\n            @if nth( $details, 2 ) == true {\n                // #### Output var\n                --#{nth($details, 3)}: #{nth($details, 1)};\n            }\n        }\n    }\n}","// Utility Class constructor\n// # Let's create the properties once so we don't keep repeating ourselves.\n@mixin constructor( $prefix, $suffix ) {\n\n    // ### Check if $map has been specified\n    @if $class_map != null {\n\n        // #### If $map is specified, loop through each item in map.\n        @each $name, $properties in $class_map {\n\n            // ##### Check if item should output a CSS Var.\n            @if nth( $properties, 2 ) == true {\n\n                @if $name == 'default' {\n                    .#{$prefix}#{$suffix} {\n                        #{$class_property}: v(#{nth($properties, 3)});\n                    }\n                } @else {\n                    // ###### Construct Class with Properties from map.\n                    .#{$prefix}--#{$name}#{$suffix} {\n                        #{$class_property}: v(#{nth($properties, 3)});\n                    }\n                }\n\n            } @else {\n\n                @if $name == 'default' {\n                    // ###### Construct Class with Properties from map.\n                    .#{$prefix}#{$suffix} {\n                        #{$class_property}: #{nth($properties, 1)};\n                    }\n                } @else {\n                    // ###### Construct Class with Properties from map.\n                    .#{$prefix}--#{$name}#{$suffix} {\n                        #{$class_property}: #{nth($properties, 1)};\n                    }\n                }\n\n\n            }\n        }\n    }\n}\n\n// # Let's put it altogether\n@mixin class-constructor( $class_name, $class_variants, $class_property, $class_map ){\n\n    // ## Use constructor to build your default classes without media queries & variants.\n    @include constructor($class_name, \"\");\n\n    // ## Check if our $variants list includes 'none'.\n    @if not index($class_variants, 'none') {\n\n        // ### If 'none' isn't present we'll loop through the selected variants for this class.\n        @each $variant in $class_variants {\n\n            // #### We want to make sure we don't use the 'responsive' variant at this point if it exists.\n            @if $variant != 'responsive' {\n\n                // ##### Use constructor to build our variant classes without media queries.\n                @include constructor(\"#{$variant}\\\\:#{$class_name}\", \":#{$variant}\");\n            }\n        }\n    }\n\n    // ## Check if our $variants list includes 'responsive'.\n    @if index($class_variants, 'responsive') {\n\n        // ### If 'responsive' is present we'll loop through the brakpoints set in _scss-vars.scss.\n        @each $bp_name, $breakpoint in $breakpoints {\n\n            // #### Construct each media query when we loop through it.\n            @media (min-width: $breakpoint) {\n\n                // ##### Use constructor to build our default classes with breakpoint prefix.\n                @include constructor(\"#{$bp_name}\\\\:#{$class_name}\", \"\");\n\n                // ##### We'll loop through the selected variants for this class.\n                @each $variant in $class_variants {\n\n                    // ###### We want to make sure we don't use the 'responsive' variant at this pointas we've already used it.\n                    @if $variant != 'responsive' {\n\n                        // ####### Use constructor to build our variant classes with breakpoint prefix.\n                        @include constructor(\"#{$bp_name}\\\\:#{$variant}\\\\:#{$class_name}\", \":#{$variant}\");\n                    }\n                }\n            }\n        }\n    }\n}\n"]}