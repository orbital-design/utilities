{"version":3,"sources":["base.scss","typography/font-family.scss","_functions.scss"],"names":[],"mappings":"AAEA;EACI,mEAAU;EACV,6DAAW,EAAA;;ACOX;EACI,qECNwB;EDMxB,2BCNwB,EAAA;;ADS5B;EACI,8DCVwB;EDUxB,4BCVwB,EAAA;;ADmCxB;EA9BJ;IACI,qECNwB;IDMxB,2BCNwB,EAAA;EDS5B;IACI,8DCVwB;IDUxB,4BCVwB,EAAA,EDW3B;;AAwBG;EA9BJ;IACI,qECNwB;IDMxB,2BCNwB,EAAA;EDS5B;IACI,8DCVwB;IDUxB,4BCVwB,EAAA,EDW3B;;AAwBG;EA9BJ;IACI,qECNwB;IDMxB,2BCNwB,EAAA;EDS5B;IACI,8DCVwB;IDUxB,4BCVwB,EAAA,EDW3B;;AAwBG;EA9BJ;IACI,qECNwB;IDMxB,2BCNwB,EAAA;EDS5B;IACI,8DCVwB;IDUxB,4BCVwB,EAAA,EDW3B","file":"base.css","sourcesContent":["// Global Settings\n\n:root {\n    --ff-sans: Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n    --ff-serif: Georgia, Cambria, \"Times New Roman\", Times, serif;\n}\n// # Breakpoint Setup - min-width\n$media_queries: (\n  sm: 768px,\n  md: 1024px,\n  lg: 1300px,\n  xl: 1500px\n);\n\n// Includes\n@import 'functions';\n\n// # Typography\n@import 'typography/font-family';\n\n// # Effects\n// @import 'effects/box-shadow';\n// @import 'effects/opacity';\n\n// # Interactivity.\n// @import 'interactivity/appearance';\n// @import 'interactivity/cursor';\n// @import 'interactivity/outline';\n// @import 'interactivity/pointer-events';\n// @import 'interactivity/resize';\n// @import 'interactivity/user-select';\n\n// # SVG classes.\n// @import 'svg/fill';\n// @import 'svg/stroke';\n// @import 'svg/stroke-width';\n\n// # Accessibility classes.\n// @import 'accessibility/screen-readers';\n","// Set class name.\n$className: 'font';\n\n// Set variants available for this class.\n// # You can use 'responsive' as well as 'hover', 'focus', 'active' etc...\n$variants: 'responsive';\n\n// Construct class props so we don't keep repeating ourselves.\n@mixin font-family($prefix, $suffix) {\n\n    // Utilities for controlling the box shadow of an element.\n    .#{$prefix}--sans#{$suffix} {\n        font-family: v(ff-sans);\n    }\n\n    .#{$prefix}--serif#{$suffix} {\n        font-family: v(ff-serif);\n    }\n}\n\n// Use mixin as a default class without media queries.\n@include font-family($className, \"\");\n\n// Loop through the selected variants for this class.\n@each $variant in $variants {\n\n    // Make sure we don't include the 'responsive' the variant.\n    @if $variant != 'responsive' {\n        // Include variant classes\n        @include font-family(\"#{$variant}\\\\:#{$className}\", \":#{$variant}\");\n    }\n}\n\n// Use mixin inside media queries with relevant prefix.\n// # Check if 'responsive' is in list.\n@if index($variants, 'responsive') {\n\n    // If responsive is in list then loop through breakpoints.\n    @each $query_name, $query_width in $media_queries {\n\n        // Initiate Media Query.\n        @media (min-width: $query_width) {\n\n            // Create default class with breakpoint prefix.\n            @include font-family(\"#{$query_name}\\\\:#{$className}\", \"\");\n\n            // Loop through the selected variants for this class.\n            @each $variant in $variants {\n\n                // Make sure we don't include the 'responsive' the variant.\n                @if $variant != 'responsive' {\n\n                    // Include variant classes inside mq\n                    @include font-family(\"#{$query_name}\\\\:#{$variant}\\\\:#{$className}\", \":#{$variant}\");\n                }\n            }\n        }\n    }\n}\n","// fn for easily creating css vars\n// # https://dev.to/meduzen/write-css-variables-faster-in-scss-1mon\n@function v($var, $fallback: null) {\n    @if($fallback) {\n        @return var(--#{$var}, #{$fallback});\n    } @else {\n        @return var(--#{$var});\n    }\n}"]}