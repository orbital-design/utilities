// Breakpoints - min-width
// # DO NOT REMOVE - Edit but DO NOT REMOVE
$breakpoints: (
  sm: 768px,
  md: 1024px,
  lg: 1300px,
  xl: 1500px
);

// Comment out any maps below this line to prevent css vars or Utility Classes being created from them.
//===============================================================================================

// Colours
// # Generates matching CSS Custom Vars in: _css-vars.
$colours: (
    'vars': (
        'white':        #ffffff,
        'black':        #252525,
        'dark-grey':    #212322,
        'mid-grey':     #54585a,
        'light-grey':   #97999b,
        'bg-grey':      #f3f3f3
    )
);

// Effects - Box Shadow
// # Generates matching Utility Classes in: effects/_box-shadow.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$shadow_properties: (
    'vars': (
        'shadow-xs':        '0 0 0 1px rgba(0, 0, 0, 0.05)',
        'shadow-sm':        '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
        'shadow-base':      '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
        'shadow-md':        '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
        'shadow-lg':        '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
        'shadow-xl':        '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
        'shadow-2xl':       '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
        'shadow-inner':     'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',
        'shadow-outline':   '0 0 0 3px rgba(66, 153, 225, 0.5)',
        'shadow-none':      'none'
    ),
    'classes': (
        'shadow-xs':        ( 'box-shadow':   v('shadow-xs') ),
        'shadow-sm':        ( 'box-shadow':   v('shadow-sm') ),
        'shadow-base':      ( 'box-shadow':   v('shadow-base') ),
        'shadow-md':        ( 'box-shadow':   v('shadow-md') ),
        'shadow-lg':        ( 'box-shadow':   v('shadow-lg') ),
        'shadow-xl':        ( 'box-shadow':   v('shadow-xl') ),
        'shadow-2xl':       ( 'box-shadow':   v('shadow-2xl') ),
        'shadow-inner':     ( 'box-shadow':   v('shadow-inner') ),
        'shadow-outline':   ( 'box-shadow':   v('shadow-outline') ),
        'shadow-none':      ( 'box-shadow':   v('shadow-none') )
    )
);

// Effects - Opacity
// # Generates matching Utility Classes in: effects/_opacity.scss
$opacity_properties: ( 'classes': () );
@for $i from 0 through 20 {
    $opacity_properties: map-deep-set( $opacity_properties, 'classes', 'opacity-#{($i*5)}', ('opacity': ( $i * 5 ) / 100) );
}

// Interactivity - Appearance
// # Generates matching Utility Classes in: interactivity/_appearance.scss
$appearance_properties: (
    'classes': (
        'apperance-none':       ( 'appearance': 'none' )
    )
);

// Interactivity - Cursors
// # Generates matching Utility Classes in: interactivity/_cursor.scss
$cursor_properties: (
    'classes': (
        'cursor-auto':          ( 'cursor': 'auto' ),
        'cursor-default':       ( 'cursor': 'default' ),
        'cursor-pointer':       ( 'cursor': 'pointer' ),
        'cursor-wait':          ( 'cursor': 'wait' ),
        'cursor-text':          ( 'cursor': 'text' ),
        'cursor-move':          ( 'cursor': 'move' ),
        'cursor-not-allowed':   ( 'cursor': 'not-allowed' )
    )
);

// Interactivity - Outline
// # Generates matching Utility Classes in: interactivity/_outline.scss
$outline_properties: (
    'classes': (
        'outline-none':         ( 'outline': 'none' )
    )
);

// Interactivity - Pointer Events
// # Generates matching Utility Classes in: interactivity/_pointer-events.scss
$pointer_event_properties: (
    'classes': (
        'pointer-none':         ( 'pointer-events': 'none' ),
        'pointer-auto':         ( 'pointer-events': 'auto' )
    )
);

// Interactivity - Resize
// # Generates matching Utility Classes in: interactivity/_resize.scss
$resize_properties: (
    'classes': (
        'resize-both':          ( 'resize': 'both' ),
        'resize-none':          ( 'resize': 'none' ),
        'resize-y':             ( 'resize': 'vertical' ),
        'resize-x':             ( 'resize': 'horizontal' )
    )
);

// Interactivity - User Select
// # Generates matching Utility Classes in: interactivity/_user-select.scss
$user_select_properties: (
    'classes': (
        'u-select-none':        ( 'user-select': 'none' ),
        'u-select-text':        ( 'user-select': 'text' ),
        'u-select-all':         ( 'user-select': 'all' ),
        'u-select-auto':        ( 'user-select': 'auto' )
    )
);

// Sizing - width
// # Generates matching Utility Classes in: sizing/_width.scss
$width_properties: (
    'vars': (
        'w-auto':           auto,
        'w-0':              0,
        'w-25':             25%,
        'w-50':             50%,
        'w-75':             75%,
        'w-full':           100%,
        'w-screen':         100vw,
        'w-1-third':        33.333333%,
        'w-2-thirds':       66.666667%,
        'w-1-fifth':        20%,
        'w-2-fifths':       40%,
        'w-3-fifths':       60%,
        'w-4-fifths':       80%,
        'w-1-sixth':        16.666667%,
        'w-2-sixths':       33.333333%,
        'w-3-sixths':       50%,
        'w-4-sixths':       66.666667%,
        'w-5-sixths':       83.333333%,
        'w-1-twelfth':      8.333333% ,
        'w-2-twelfths':     16.666667%,
        'w-3-twelfths':     25%,
        'w-4-twelfths':     33.333333%,
        'w-5-twelfths':     41.666667%,
        'w-6-twelfths':     50%,
        'w-7-twelfths':     58.333333%,
        'w-8-twelfths':     66.666667%,
        'w-9-twelfths':     75%,
        'w-10-twelfths':    83.333333%,
        'w-11-twelfths':    91.666667%
    ),
    'classes': (
        'w-auto':           ( 'width': v('w-auto') ),
        'w-0':              ( 'width': v('w-0') ),
        'w-quarter':        ( 'width': v('w-25') ),
        'w-half':           ( 'width': v('w-50') ),
        'w-3-quarter':      ( 'width': v('w-75') ),
        'w-full':           ( 'width': v('w-full') ),
        'w-screen':         ( 'width': v('w-screen') )
    )
);

// Sizing - Max Width
// # Generates matching Utility Classes in: sizing/_max-width.scss
$max_width_properties: ( 'classes': () );
@each $class_name, $class_props in map-get($width_properties, 'classes') {
    @each $property, $var in $class_props {
        $max_width_properties: map-deep-set( $max_width_properties, 'classes', 'max-#{$class_name}', ('max-#{$property}': $var) );
    }
}

// Sizing - Min Width
// # Generates matching Utility Classes in: sizing/_min-width.scss
$min_width_properties: ( 'classes': () );
@each $class_name, $class_props in map-get($width_properties, 'classes') {
    @each $property, $var in $class_props {
        $min_width_properties: map-deep-set( $min_width_properties, 'classes', 'min-#{$class_name}', ('min-#{$property}': $var) );
    }
}

// Sizing - Height
// # Generates matching Utility Classes in: sizing/_height.scss
$height_properties: (
    'vars': (
        'h-auto':           auto,
        'h-0':              0,
        'h-25':             25%,
        'h-50':             50%,
        'h-75':             75%,
        'h-full':           100%,
        'h-screen':         100vh
    ),
    'classes': (
        'h-auto':           ( 'height': v('h-auto') ),
        'h-0':              ( 'height': v('h-0') ),
        'h-quarter':        ( 'height': v('h-25') ),
        'h-half':           ( 'height': v('h-50') ),
        'h-3-quarter':      ( 'height': v('h-75') ),
        'h-full':           ( 'height': v('h-full') ),
        'h-screen':         ( 'height': v('h-screen') )
    )
);

// Sizing - Max Height
// # Generates matching Utility Classes in: sizing/_max-height.scss
$max_height_properties: ( 'classes': () );
@each $name, $value in map-get($height_properties, 'vars') {
    $max_height_properties: map-deep-set( $max_height_properties, 'classes', 'max-#{$name}', ('max-height': $value) );
}

// Sizing - Min Height
// # Generates matching Utility Classes in: sizing/_min-height.scss
$min_height_properties: ( 'classes': () );
@each $name, $value in map-get($height_properties, 'vars') {
    $min_height_properties: map-deep-set( $min_height_properties, 'classes', 'min-#{$name}', ('min-height': $value) );
}

// Spacing - Spacing Units
// # Generates matching CSS Custom Vars in: _css-vars.
// # Generates Margin Utility Classes using these vars in: spacing/_padding.scss
// # Generates Padding Utility Classes using these vars in: spacing/_margin.scss
$spacing_default: 5px;
$spacing_properties: (
    'vars': (
        'spacing-0':    rem-calc($spacing_default * 0),
        'spacing-1':    rem-calc($spacing_default * 1),
        'spacing-2':    rem-calc($spacing_default * 2)
    )
);

// Spacing - Margin
// # Generates matching Utility Classes in: spacing/_margin.scss
// # Creates the 'classes' map from the '$spacing_properties' map.
$margin_properties: ( 'classes': () );
@include spacing-map-constructor( $spacing_properties, 'm', 'margin' );

// Spacing - Padding
// # Generates matching Utility Classes in: spacing/_padding.scss
// # Creates the 'classes' map from the '$spacing_properties' map.
$padding_properties: ( 'classes': () );
@include spacing-map-constructor( $spacing_properties, 'p', 'padding' );

// SVG - Fill
// # Generates matching Utility Classes in: svg/_fill.scss
$fill_color_properties: ( 'classes': ( 'fill-current': ( 'fill': 'currentColor' ) ) );
@each $name, $value in map-get($colours, 'vars') {
    $fill_color_properties: map-deep-set( $fill_color_properties, 'classes', 'fill-#{$name}', ('fill': $value) );
}

// SVG - Stroke Colors
// # Generates matching Utility Classes in: svg/_stroke.scss
$stroke_color_properties: ( 'classes': ( 'stroke-current': ( 'stroke': 'currentColor' ) ) );
@each $name, $value in map-get($colours, 'vars') {
    $stroke_color_properties: map-deep-set( $stroke_color_properties, 'classes', 'stroke-#{$name}', ('stroke': $value) );
}

// SVG - Stroke Width
// # Generates matching Utility Classes in: svg/_stroke-width.scss
$stroke_width_properties: ( 'classes': () );
@for $i from 0 through 5 {
    $stroke_width_properties: map-deep-set( $stroke_width_properties, 'classes', 'stroke-w-#{$i}', ('stroke-width': $i) );
}

// Typography - Fluid Text Defaults
// # Generates matching CSS Custom Vars in: _css-vars.
$fluid_typography: (
    'vars': (
        'fluid-min-width':  320,
        'fluid-max-width':  1500,
        'fluid-min-size':   16,
        'fluid-max-size':   19,
        'fluid-min-ratio':  1.125,
        'fluid-max-ratio':  1.2
    )
);

// Typography - Font Family
// # Generates matching Utility Classes in: typography/_font-family.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_family_properties: (
    'vars': (
        'ff-sans':      'Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif',
        'ff-serif':     'Georgia, Cambria, "Times New Roman", Times, serif'
    ),
    'classes': (
        'font-sans':    ( 'font-family': v('ff-sans') ),
        'font-serif':   ( 'font-family': v('ff-serif') )
    )
);

// Typography - Font Size
// # Generates matching Utility Classes in: typography/_font-size.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_size_properties: (
    'vars': (
        'fs-sm':        calc( ((var(--fluid-min-size--1) * 1rem) + (var(--fluid-max-size--1) - var(--fluid-min-size--1)) * var(--fluid-bp)) ),
        'fs-base':      calc( ((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp)) ),
        'fs-md':        calc( ((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp)) ),
        'fs-lg':        calc( ((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp)) ),
        'fs-xl':        calc( ((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp)) ),
        'fs-2xl':       calc( ((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp)) ),
        'fs-3xl':       calc( ((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp)) )
    ),
    'classes': (
        'font-sm':      ( 'font-size': v('fs-sm') ),
        'font-base':    ( 'font-size': v('fs-base') ),
        'font-md':      ( 'font-size': v('fs-md') ),
        'font-lg':      ( 'font-size': v('fs-lg') ),
        'font-xl':      ( 'font-size': v('fs-xl') ),
        'font-2xl':     ( 'font-size': v('fs-2xl') ),
        'font-3xl':     ( 'font-size': v('fs-3xl') )
    )
);

// Typography - Font Style
// # Generates matching Utility Classes in: typography/_font-style.scss
$font_style_properties: (
    'classes': (
        'font-style-normal':    ( 'font-style': 'normal' ),
        'font-style-italic':    ( 'font-style': 'italic' )
    )
);

// Typography - Font Weights
// # Generates matching Utility Classes in: typography/_font-weight.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_weight_properties: (
    'vars': (
        'fw-light':         200,
        'fw-normal':        400,
        'fw-bold':          600
    ),
    'classes': (
        'font-light':       ( 'font-weight': v('fw-light') ),
        'font-normal':      ( 'font-weight': v('fw-normal') ),
        'font-bold':        ( 'font-weight': v('fw-bold') )
    )
);

// Typography - Tracking / Letter Spacings
// # Generates matching Utility Classes in: typography/_letter-spacing.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$tracking_properties: (
    'vars': (
        'tracking-tightest':    -0.1em,
        'tracking-tighter':     -0.05em,
        'tracking-tight':       -0.025em,
        'tracking-normal':      0,
        'tracking-wide':        0.025em,
        'tracking-wider':       0.05em,
        'tracking-widest':      0.1em
    ),
    'classes': (
        'tracking-tightest':    ( 'letter-spacing': v('tracking-tightest') ),
        'tracking-tighter':     ( 'letter-spacing': v('tracking-tighter') ),
        'tracking-tight':       ( 'letter-spacing': v('tracking-tight') ),
        'tracking-normal':      ( 'letter-spacing': v('tracking-normal') ),
        'tracking-wide':        ( 'letter-spacing': v('tracking-wide') ),
        'tracking-wider':       ( 'letter-spacing': v('tracking-wider') ),
        'tracking-widest':      ( 'letter-spacing': v('tracking-widest') )
    )
);

// Typography - Leading / Line Height
// # Generates matching Utility Classes in: typography/_line-height.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$leading_properties: (
    'vars': (
        'leading-none':     1,
        'leading-tight':    1.25,
        'leading-snug':     1.375,
        'leading-normal':   1.5,
        'leading-relaxed':  1.625,
        'leading-loose':    2
    ),
    'classes': (
        'leading-none':     ( 'line-height': v('leading-none') ),
        'leading-tight':    ( 'line-height': v('leading-tight') ),
        'leading-snug':     ( 'line-height': v('leading-snug') ),
        'leading-normal':   ( 'line-height': v('leading-normal') ),
        'leading-relaxed':  ( 'line-height': v('leading-relaxed') ),
        'leading-loose':    ( 'line-height': v('leading-loose') )
    )
);

// Typography - Text Align
// # Generates matching Utility Classes in: typography/_text-align.scss
$text_align_properties: (
    'classes': (
        'text-left':    ( 'text-align': 'left' ),
        'text-center':  ( 'text-align': 'center' ),
        'text-right':   ( 'text-align': 'right' ),
        'text-justify': ( 'text-align': 'justify' )
    )
);

// Typography - Text Colors
// # Generates matching Utility Classes in: typography/_text-colour.scss
$text_color_properties: ( 'classes': () );
@each $name, $value in map-get($colours, 'vars') {
    $text_color_properties: map-deep-set( $text_color_properties, 'classes', 'text-#{$name}', ('color': v($name) ) );
}

// Typography - Text Decoration
// # Generates matching Utility Classes in: typography/_text-decoration.scss
$text_decoration_properties: (
    'classes': (
        'text-under':   ( 'text-decoration': 'underline' ),
        'text-strike':  ( 'text-decoration': 'line-through' ),
        'text-none':    ( 'text-decoration': 'none' )
    )
);
