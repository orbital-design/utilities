// Global Settings
// # Effects
$box_shadows: null !default; // TODO: Create map.
$opacities: null !default; // TODO: Create map.
// # Interactivity
$appearances: null !default; // TODO: Create map.
$cursors: null !default; // TODO: Create map.
$outlines: null !default; // TODO: Create map.
$pointer_events: null !default; // TODO: Create map.
$resizes: null !default; // TODO: Create map.
$user_selects: null !default; // TODO: Create map.
// # SVG
$fills: null !default; // TODO: Create map.
$strokes: null !default; // TODO: Create map.
$stroke_widths: null !default; // TODO: Create map.
// # Typography
$fluid_typography: null !default;
$font_families: null !default;
$font_sizes: null !default;
$font_styles: null !default;
$font_weights: null !default;
$letter_spacings: null !default;
$line_heights: null !default;
$text_alignments: null !default;
$text_decorations: null !default;
// # Colours
$colours: null !default;

// Breakpoints - min-width
// # DO NOT REMOVE - Edit but DO NOT REMOVE
$breakpoints: (
  sm: 768px,
  md: 1024px,
  lg: 1300px,
  xl: 1500px
);

// Comment out any maps below this line to prevent css vars or Utility Classes being created from them.
//===============================================================================================

// Typography - Fluid Text Defaults
// # Generates matching CSS Custom Vars in: _css-vars.
$fluid_typography: (
    fluid-min-width: ( 320, true, 'fluid-min-width' ),
    fluid-max-width: ( 1500, true, 'fluid-max-width' ),
    fluid-min-size:  ( 16, true, 'fluid-min-size' ),
    fluid-max-size:  ( 19, true, 'fluid-max-size' ),
    fluid-min-ratio: ( 1.125, true, 'fluid-min-ratio' ),
    fluid-max-ratio: ( 1.2, true, 'fluid-max-ratio' )
);

// Typography - Font Family
// # Generates matching Utility Classes in: typography/_font-family.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_families: (
    // name: ( value, output css var, css var name )
    sans: ( 'Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif', true, 'ff-sans'),
    serif: ( 'Georgia, Cambria, "Times New Roman", Times, serif', true, 'ff-serif' )
);

// Typography - Font Size
// # Generates matching Utility Classes in: typography/_font-size.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_sizes: (
    // name: ( value, output css var, css var name )
    default: ( calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp))), false, '' ),
    sm: ( calc(((var(--fluid-min-size--1) * 1rem) + (var(--fluid-max-size--1) - var(--fluid-min-size--1)) * var(--fluid-bp))), true, 'fs-sm' ),
    base: ( calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp))), true, 'fs-base' ),
    md: ( calc(((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp))), true, 'fs-md' ),
    lg: ( calc(((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp))), true, 'fs-lg' ),
    xl: ( calc(((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp))), true, 'fs-xl' ),
    2xl: ( calc(((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp))), true, 'fs-2xl' ),
    3xl: ( calc(((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp))), true, 'fs-3xl' )
);

// Typography - Font Style
// # Generates matching Utility Classes in: typography/_font-style.scss
$font_styles: (
    // name: ( value, output css var, css var name )
    default: (normal, false, ''),
    italic: ( italic, false, '' ),
    normal: ( normal, false, '' )
);

// Typography - Font Weights
// # Generates matching Utility Classes in: typography/_font-weight.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$font_weights: (
    // name: ( value, output css var, css var name )
    default: (400, false, ''),
    light: ( 200, true, 'fw-light' ),
    normal: ( 400, true, 'fw-normal' ),
    bold: ( 600, true, 'fw-bold' )
);

// Typography - Tracking / Letter Spacings
// # Generates matching Utility Classes in: typography/_letter-spacing.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$letter_spacings: (
    // name: ( value, output css var, css var name )
    default: (1.5, false, ''),
    tightest: ( -0.1em, true, 'tracking-tightest' ),
    tighter: ( -0.05em, true, 'tracking-tighter' ),
    tight: ( -0.025em, true, 'tracking-tight' ),
    normal: ( 0, true, 'tracking-normal' ),
    wide: ( 0.025em, true, 'tracking-wide' ),
    wider: ( 0.05em, true, 'tracking-wider' ),
    widest: ( 0.1em true, 'tracking-widest' )
);

// Typography - Leading / Line Height
// # Generates matching Utility Classes in: typography/_line-height.scss
// # Generates matching CSS Custom Vars in: _css-vars.
$line_heights: (
    // name: ( value, output css var, css var name )
    default: (1.5, false, ''),
    none:   ( 1, true, 'leading-none' ),
    tight:  ( 1.25, true, 'leading-tight' ),
    snug:   ( 1.375, true, 'leading-snug' ),
    normal: ( 1.5, true, 'leading-normal' ),
    relaxed:( 1.625, true, 'leading-relaxed' ),
    loose:  ( 2, true, 'leading-loose' )
);

// Typography - Text Align
// # Generates matching Utility Classes in: typography/_text-align.scss
$text_alignments: (
    // name: ( value, output css var, css var name )
    default: ( 1.5, false, '' ),
    left: ( left, false, '' ),
    center: ( center, false, '' ),
    right: ( right, false, '' ),
    justify: ( justify false, '' )
);

// Typography - Text Decoration
// # Generates matching Utility Classes in: typography/_text-decoration.scss
$text_decorations: (
    // name: ( value, output css var, css var name )
    under: ( underline, false, '' ),
    strike: ( line-through, false, '' ),
    none: ( none, false, '' )
);

// Colours
// # Generates matching CSS Custom Vars in: _css-vars.
$colours: (
    // name: ( value, output css var, css var name )
    white: ( #ffffff, true, 'white' ),
    black: ( #252525, true, 'black' ),
    dark-grey: ( #212322, true, 'dark-grey' ),
    mid-grey: ( #54585a, true, 'mid-grey' ),
    light-grey: ( #97999b, true, 'light-grey' ),
    bg-grey: ( #f3f3f3, true, 'bg-grey' )
);